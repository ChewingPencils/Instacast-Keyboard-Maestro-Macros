<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>tell application "System Events"	set cApp to item 1 of (get name of processes whose frontmost is true)	activate application "Instacast"
	delay 0.5	key code 2 using command down
end tell
	activate application cApp</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>408210586.80299699</real>
				<key>Name</key>
				<string>Instacast - Add Bookmark</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>9B7B481F-851A-4BD0-87E9-944CCF6CF075</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Instacast</string>
		<key>UID</key>
		<string>35EA8ADF-1563-4C95-A6B9-05AB56B46C14</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>tell application "System Events"	set cApp to item 1 of (get name of processes whose frontmost is true)	activate application "Instacast"	key code 123 using command down
end tell	
	activate application cApp</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>408210466.55147398</real>
				<key>Name</key>
				<string>Instacast - Back 30 Seconds</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>940399E9-E2E1-46A5-BDDD-E0CECAFD82F0</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Instacast</string>
		<key>UID</key>
		<string>35EA8ADF-1563-4C95-A6B9-05AB56B46C14</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>tell application "System Events"	set cApp to item 1 of (get name of processes whose frontmost is true)	activate application "Instacast"	key code 124 using command down
end tell
	activate application cApp</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>408210545.52464199</real>
				<key>Name</key>
				<string>Instacast - Forward 30 Seconds</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>8423D2FF-A347-46A6-B3F6-B204DE441289</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Instacast</string>
		<key>UID</key>
		<string>35EA8ADF-1563-4C95-A6B9-05AB56B46C14</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>--	Created by: Sean Korzdorfer--	Created on: 05/01/13 15:13:13	-- `menu_click`, by Jacob Rus, September 2006	-- 	-- Accepts a list of form: `{"Finder", "View", "Arrange By", "Date"}`	-- Execute the specified menu item.  In this case, assuming the Finder 	-- is the active application, arranging the frontmost folder by date.			tell application "System Events"		set cApp to item 1 of (get name of processes whose frontmost is true)		activate application "Instacast"		tell process "Instacast"			set mName to name of second menu item of menu 1 of menu bar item "Control" of menu bar 1		end tell	end tell	set mList to {"Instacast", "Control", mName}	my menu_click(mList)	activate application cApp	on menu_click(mList)	local appName, topMenu, r		-- Validate our input	if mList's length &lt; 3 then error "Menu list is not long enough"		-- Set these variables for clarity and brevity later on	set {appName, topMenu} to (items 1 through 2 of mList)	set r to (items 3 through (mList's length) of mList)		-- This overly-long line calls the menu_recurse function with	-- two arguments: r, and a reference to the top-level menu	tell application "System Events" to my menu_click_recurse(r, ((process appName)'s Â¬		(menu bar 1)'s (menu bar item topMenu)'s (menu topMenu)))end menu_clickon menu_click_recurse(mList, parentObject)	local f, r	set r to ""		-- `f` = first item, `r` = rest of items	set f to item 1 of mList	if mList's length &gt; 1 then set r to (items 2 through (mList's length) of mList)		-- either actually click the menu item, or recurse again	tell application "System Events"		if mList's length is 1 then			click parentObject's menu item f		else			my menu_click_recurse(r, (parentObject's (menu item f)'s (menu f)))		end if	end tellend menu_click_recurse</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>408210381.76969701</real>
				<key>Name</key>
				<string>Instacast - Play/Pause</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>AC88F930-A8B8-45BC-AF99-FE1E99FBAC76</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Instacast</string>
		<key>UID</key>
		<string>35EA8ADF-1563-4C95-A6B9-05AB56B46C14</string>
	</dict>
</array>
</plist>
